В метод main первым параметром приходит имя файла.
В этом файле каждая строка имеет следующий вид:
имя значение
где [имя] - String, [значение] - double. [имя] и [значение] разделены пробелом.

Для каждого имени посчитать сумму всех его значений.
Все данные вывести в консоль, предварительно отсортировав в возрастающем порядке по имени.
Закрыть потоки.

Пример входного файла:
Петров 2
Сидоров 6
Иванов 1.35
Петров 3.1

Пример вывода:
Иванов 1.35
Петров 5.1
Сидоров 6.0
Требования:

    •
    Программа НЕ должна считывать данные с консоли.
    •
    Программа должна считывать содержимое файла (используй FileReader).
    •
    Поток чтения из файла (FileReader) должен быть закрыт.
    •
    Программа должна выводить в консоль каждое имя и сумму всех его значений, все данные должны быть отсортированы в возрастающем порядке по имени.

package com.javarush.task.task19.task1919;

import java.io.*;
import java.util.*;

/* 
Считаем зарплаты
*/

public class Solution {
    public static void main(String[] args) throws IOException {

        BufferedReader bufferedReader = new BufferedReader(new FileReader(args[0]));
        ArrayList<String> arrString = new ArrayList<>();
        ArrayList<Double> arrDouble = new ArrayList<>();

        Map<String, Double> map = new TreeMap<String, Double>();

        while (true) {
            String s = bufferedReader.readLine();
            if (s == null) {break;}
            String[] strings = s.split(" ");

            if (arrString.contains(strings[0])) {
                int index = arrString.indexOf(strings[0]);
                arrString.set(index, strings[0]);
                arrDouble.set(index, arrDouble.get(index) + Double.parseDouble(strings[1]));
                map.put(arrString.get(index), arrDouble.get(index));
            } else {
                arrString.add(strings[0]);
                Double d = Double.parseDouble(strings[1]);
                arrDouble.add(d);
                map.put(strings[0], d);
            }
        }

        for(Map.Entry e : map.entrySet()){
            System.out.println(e.getKey()+" "+ e.getValue());
        }
        bufferedReader.close();
    }
}


// решение №2

public class Solution {
    public static void main(String[] args) throws IOException {

        BufferedReader bufferedReader = new BufferedReader(new FileReader(args[0]));
        Map<String, Double> treeMap = new TreeMap<String, Double>();

        while (true) {
            String s = bufferedReader.readLine();
            if (s == null) {break;}
            String[] strings = s.split(" ");

            if (treeMap.containsKey(strings[0])) {
                treeMap.put(strings[0], treeMap.get(strings[0]) + Double.parseDouble(strings[1]));
            } else {
                treeMap.put(strings[0], Double.parseDouble(strings[1]));
            }
        }
        for(Map.Entry e : treeMap.entrySet()){
            System.out.println(e.getKey()+" "+ e.getValue());
        }
        bufferedReader.close();
    }
}