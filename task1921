В метод main первым параметром приходит имя файла.
В этом файле каждая строка имеет следующий вид:
имя день месяц год
где [имя] - может состоять из нескольких слов, разделенных пробелами, и имеет тип String.
[день] - int, [месяц] - int, [год] - int
данные разделены пробелами.

Заполнить список PEOPLE используя данные из файла.
Закрыть потоки.

Пример входного файла:
Иванов Иван Иванович 31 12 1987
Вася 15 5 2013
Требования:

    •
    Класс Solution должен содержать публичную константу PEOPLE типа List<Person>, которая должна быть сразу проинициализирована.
    •
    Программа НЕ должна считывать данные с консоли.
    •
    Программа должна считывать содержимое файла (используй FileReader).
    •
    Поток чтения из файла (FileReader) должен быть закрыт.
    •
    Программа должна заполнить список PEOPLE данными из файла.
    •
    Программа должна правильно работать с двойными именами, например Анна-Надежда.

package com.javarush.task.task19.task1921;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

/*
Хуан Хуанович
*/

public class Solution {
    public static final List<Person> PEOPLE = new ArrayList<Person>();

    public static void main(String[] args) throws IOException, ParseException {

        ArrayList <String> arr = new ArrayList<>();
        ArrayList <String> arr2 = new ArrayList<>();
        ArrayList <String> arr3 = new ArrayList<>();

        BufferedReader bufferedReader = new BufferedReader(new FileReader(args[0]));

       while (true){
           String s = bufferedReader.readLine();
           if(s == null){break;}
           arr.add(s);
       }

       bufferedReader.close();

       for(String str : arr){
           String [] strings = str.split(" ");
           Collections.reverse(Arrays.asList(strings));
           String stringName = "";

           for (int i = strings.length - 1 ; i > 2; i--) {
             stringName = stringName + strings[i] + " ";
           }

           arr2.add(stringName);
           arr3.add(strings[2] + " " +  strings[1]  + " " +   strings[0]);
       }
           for (int i = 0; i < arr2.size() ; i++) {
                Date birthDate = new SimpleDateFormat("dd M y").parse(arr3.get(i));
                PEOPLE.add(new Person(arr2.get(i), birthDate));
        }
    }
}

import java.util.Date;

public class Person {
    private String name;
    private Date birthDate;

    public Person(String name, Date birthDate) {
        this.name = name;
        this.birthDate = birthDate;
    }

    public String getName() {
        return name;
    }

    public Date getBirthDate() {
        return birthDate;
    }
}


